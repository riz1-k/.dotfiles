{"version":"1.0","registers":[["%",[{"text":"src/routes/_dashboard/-components/MainSidebar.tsx","registerMode":0}]],["#",[{"text":"src/routes/_dashboard/dashboard/stores/$id/listings.route.tsx","registerMode":0}]],[":",[{"text":{"commandList":["w"],"actionKeys":[],"waitingForAnotherActionKey":false,"actionsRun":[],"actionsRunPressedKeys":[],"bufferedKeys":[],"allowPotentialRemapOnFirstKey":true,"hasRunOperator":false,"isInsertion":false,"transformer":{"transformations":[]},"count":0,"operatorCount":0,"registerKey":"","registerName":":"},"registerMode":0}]],[".",[{"text":{"commandList":["<Esc>"],"actionKeys":[],"waitingForAnotherActionKey":false,"actionsRun":[{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["i"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[0],"keys":[["i"],["<Insert>"]],"multicursorIndex":0},{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["L","u","c","i","d","<C-n>"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[],"keys":[],"contentChanges":[{"text":"Lucid","range":[{"line":28,"character":8},{"line":28,"character":8}],"rangeOffset":516,"rangeLength":0}],"cursorStart":{"line":28,"character":8},"cursorEnd":{"line":28,"character":13}},{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["<C-n>"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[1],"keys":[["<C-n>"],["<C-j>"]]},{"name":"","isJump":false,"createsUndoPoint":false,"preservesDesiredColumn":false,"keysPressed":["<Esc>"],"actionType":"command","isCompleteAction":true,"runsOnceForEachCountPrefix":false,"modes":[1],"keys":[["<Esc>"],["<C-c>"],["<C-[>"]]}],"actionsRunPressedKeys":["i","L","u","c","i","d","<C-n>","<Esc>"],"bufferedKeys":[],"allowPotentialRemapOnFirstKey":true,"hasRunOperator":false,"isInsertion":true,"transformer":{"transformations":[]},"count":0,"operatorCount":0,"registerKey":"","registerName":"*"},"registerMode":0}]],["/",[{"text":"body","registerMode":0}]],["*",[{"text":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","registerMode":0}]],["0",[{"text":"class HomeScreen extends StatelessWidget {\n  final List<String> localImages = [\n    'assets/images/cat1.jpg',\n    'assets/images/cat2.jpg',\n    'assets/images/cat3.jpg',\n  ];\n\n  final List<String> remoteImages = [\n    'https://images.pexels.com/photos/1108099/pexels-photo-1108099.jpeg'\n        'https://images.pexels.com/photos/1633522/pexels-photo-1633522.jpeg'\n  ];\n\n  HomeScreen({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Basic Flutter App'),\n      ),\n      body: Padding(\n        padding: const EdgeInsets.all(16.0),\n        child: ListView(\n          children: [\n            // Horizontal ListView with remote images\n            SizedBox(\n              height: 150,\n              child: ListView.builder(\n                scrollDirection: Axis.horizontal,\n                itemCount: remoteImages.length,\n                itemBuilder: (context, index) {\n                  return Padding(\n                    padding: const EdgeInsets.all(8.0),\n                    child: Image.network(remoteImages[index]),\n                  );\n                },\n              ),\n            ),\n            const SizedBox(height: 20), // Space between ListViews and ListTiles\n\n            // ListTile items with different font variants\n            const ListTile(\n              leading: Icon(Icons.star),\n              title: Text(\n                'this is my Regular Font',\n                style: TextStyle(fontFamily: 'SourGummy'),\n              ),\n            ),\n            const ListTile(\n              leading: Icon(Icons.favorite),\n              title: Text(\n                'this is my Bold Font',\n                style: TextStyle(\n                    fontFamily: 'SourGummy', fontWeight: FontWeight.bold),\n              ),\n            ),\n            const ListTile(\n              leading: Icon(Icons.lightbulb),\n              title: Text(\n                'Italic Font',\n                style: TextStyle(\n                    fontFamily: 'SourGummy', fontStyle: FontStyle.italic),\n              ),\n            ),\n            const ListTile(\n              leading: CircleAvatar(child: Icon(Icons.person)),\n              title: Text(\n                'Default Device Font',\n              ),\n            ),\n            const SizedBox(height: 20),\n\n            // Horizontal ListView with local images\n            SizedBox(\n              height: 150,\n              child: ListView.builder(\n                scrollDirection: Axis.horizontal,\n                itemCount: localImages.length,\n                itemBuilder: (context, index) {\n                  return Padding(\n                    padding: const EdgeInsets.all(8.0),\n                    child: Image.asset(localImages[index]),\n                  );\n                },\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\n","registerMode":0}]],["\"",[{"registerMode":0,"text":"file:///Users/glennraya"}]],["-",[{"text":"file:///Users/glennraya","registerMode":0}]],["1",[{"text":"  \"apc.activityBar\": {\r\n\r\n  },","registerMode":1}]]]}